<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns="http://java.sun.com/xml/ns/javaee" 
    xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" 
    xsi:schemaLocation="http://java.sun.com/xml/ns/javaee 
    http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" 
    id="WebApp_ID" version="2.5">
  <display-name>do-shopping</display-name>
  
  <!-- tomcat解析web.xml并加载类的时候，他加载顺序是：listener-filter-servlet-other-->
  <!-- 所以我们把spring的bean的注册工作放在listener，优先启动（这里包括数据源模块的启动 -->
  <!-- Spring的ApplicationContext 载入 -->
  <!-- 在这里可以配置spring的监听器，启动的时候需要把spring中的bean都注册到spring容器中 ，当然他需要读取一个配置文件applicationContext.xml -->
  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>
  
  <!-- Spring ApplicationContext配置文件的路径,可使用通配符,多个路径用,号分隔 此参数用于后面的Spring Context Loader -->
  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>classpath*:applicationContext-*.xml</param-value>
    
  </context-param>
  
  <!-- 配置文件Servlet -->
  <!-- Spring MVC Servlet -->
  <!--我们希望spring的控制器比其他servlet优先启动，所以你需要设置load-on-startup 这个东西：值越小越先启动（0-5），没有或者为负数的时候，servlet被选用的时候才加载 -->
  <servlet>
    <servlet-name>dispatcher</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <init-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>/WEB-INF/dispatcher.xml</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>dispatcher</servlet-name>
    <url-pattern>/</url-pattern>
  </servlet-mapping>
  
  <!-- characterEncodingFilter 字符编码过滤器 -->
  <filter>
    <filter-name>characterEncodingFilter</filter-name>
    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
    <init-param>
      <param-name>encoding</param-name>
      <param-value>UTF-8</param-value>
    </init-param>
    <init-param>
      <param-name>forceEncoding</param-name>
      <param-value>true</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>characterEncodingFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>
  
  <!-- session超时定义,单位为分钟 -->
  <session-config>
    <session-timeout>30</session-timeout>
  </session-config>
</web-app>